package sbnz;

import sbnz.model.User;
import sbnz.model.MealHistory;
import sbnz.model.Ingredient;
import sbnz.model.IngredientQuantity;

rule "Calculate entered daily calories"
	agenda-group "dailyCalories"
	no-loop true
	when 
		$user: User()
		$mealHistory: MealHistory($meals: meals)
		accumulate(
		 	IngredientQuantity($quantity: quantity, $ingredient: ingredient) from $meals
		 	and Ingredient($calories: calories) from $ingredient,
		 	$total: sum($calories * $quantity)
		 )
	then
		$user.setCaloriesConsumed($total);
		update($user);
end


rule "Warning: daily intake of calories is passed"
	agenda-group "dailyCalories"
	when 
		$user: User( caloriesConsumed != null, recommendedDailyCalories!= null, caloriesConsumed > recommendedDailyCalories, $excess: (caloriesConsumed - recommendedDailyCalories))
	then
		System.out.println("You passed your daily intake of calories for " + $excess);
end


rule "Left number of calories to take today"
	agenda-group "dailyCalories"
	when 
		$user: User( caloriesConsumed != null, recommendedDailyCalories!= null, caloriesConsumed < recommendedDailyCalories, $leftCalories: (recommendedDailyCalories - caloriesConsumed))
	then
		System.out.println("It is left " + $leftCalories + " calories to take today");
end